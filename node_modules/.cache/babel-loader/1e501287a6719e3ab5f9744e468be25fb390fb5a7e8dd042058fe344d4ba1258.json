{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teder\\\\Desktop\\\\Labb 2 igen eller n\\xE5got\\\\my-react\\\\src\\\\components\\\\Portfolio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Portfolio() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch GitHub projects\n    fetch('https://api.github.com/users/{Tederoll}/repos').then(response => response.json()).then(data => {\n      // Set fetched projects to state\n      setProjects(data);\n      setLoading(false); // Set loading to false once projects are fetched\n    }).catch(error => {\n      console.error('Error fetching GitHub projects:', error);\n      setLoading(false); // Set loading to false if there's an error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading projects...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) // Display loading message while projects are being fetched\n    : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), \": \", project.description]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Portfolio, \"mRzT5JcTrZlbnzxyieJ8FPAvdrE=\");\n_c = Portfolio;\nexport default Portfolio;\nvar _c;\n$RefreshReg$(_c, \"Portfolio\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Portfolio","_s","loading","setLoading","projects","setProjects","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","name","description","id","_c","$RefreshReg$"],"sources":["C:/Users/Teder/Desktop/Labb 2 igen eller nÃ¥got/my-react/src/components/Portfolio.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Portfolio() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch GitHub projects\r\n    fetch('https://api.github.com/users/{Tederoll}/repos')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Set fetched projects to state\r\n        setProjects(data);\r\n        setLoading(false); // Set loading to false once projects are fetched\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching GitHub projects:', error);\r\n        setLoading(false); // Set loading to false if there's an error\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <aside>\r\n      <h2>Portfolio</h2>\r\n      {loading ? (\r\n        <p>Loading projects...</p> // Display loading message while projects are being fetched\r\n      ) : (\r\n        <ul>\r\n          {projects.map(project => (\r\n            <li key={project.id}>\r\n              <strong>{project.name}</strong>: {project.description}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,+CAA+C,CAAC,CACnDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,WAAW,CAACK,IAAI,CAAC;MACjBP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBhB,OAAO,gBACNH,OAAA;MAAAe,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAE3BnB,OAAA;MAAAe,QAAA,EACGV,QAAQ,CAACe,GAAG,CAACC,OAAO,iBACnBrB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAAe,QAAA,EAASM,OAAO,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,OAAO,CAACE,WAAW;MAAA,GAD9CF,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAACjB,EAAA,CAnCQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}