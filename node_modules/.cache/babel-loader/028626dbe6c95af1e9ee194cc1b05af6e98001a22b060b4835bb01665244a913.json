{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teder\\\\Desktop\\\\Labb 2 igen eller n\\xE5got\\\\my-react\\\\src\\\\components\\\\JSON.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CvJson() {\n  _s();\n  // State to store the CV data\n  const [cvData, setCvData] = useState(null);\n\n  // Effect to fetch the CV data when the component mounts\n  useEffect(() => {\n    // Fetch the JSON file\n    fetch('/cv.json').then(response => response.json()).then(data => {\n      // Set the fetched data to the state\n      setCvData(data);\n    }).catch(error => {\n      console.error('Error fetching CV data:', error);\n    });\n  }, []); // Empty dependency array ensures the effect runs only once when the component mounts\n\n  // Render loading state if data is not yet fetched\n  if (!cvData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Render the CV data\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(CvJson, \"q+zQRZaKc1BkBWAMznGa9mQhN28=\");\n_c = CvJson;\nexport default CvJson;\nvar _c;\n$RefreshReg$(_c, \"CvJson\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CvJson","_s","cvData","setCvData","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Teder/Desktop/Labb 2 igen eller nÃ¥got/my-react/src/components/JSON.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction CvJson() {\r\n    // State to store the CV data\r\n    const [cvData, setCvData] = useState(null);\r\n  \r\n    // Effect to fetch the CV data when the component mounts\r\n    useEffect(() => {\r\n      // Fetch the JSON file\r\n      fetch('/cv.json')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Set the fetched data to the state\r\n          setCvData(data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching CV data:', error);\r\n        });\r\n    }, []); // Empty dependency array ensures the effect runs only once when the component mounts\r\n    \r\n    // Render loading state if data is not yet fetched\r\n    if (!cvData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Render the CV data\r\n    return (\r\n        <div>\r\n            {/* Render the CV data here */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CvJson;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,SAAS,CAACK,IAAI,CAAC;IACjB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAI,CAACR,MAAM,EAAE;IACT,oBAAOH,OAAA;MAAAa,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;;EAEA;EACA,oBACIjB,OAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEd;AAACf,EAAA,CA7BQD,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AA+Bf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}